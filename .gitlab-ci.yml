stages:
    - test
    - deploy

.test_template: &test
  stage: test
  before_script:
    - apk add --update curl && rm -rf /var/cache/apk/*
    - apk add py-pip
    - apk add python3-dev libffi-dev openssl-dev gcc libc-dev make bash
    - pip install docker-compose
  script:
    - cd docker-compose
    - export COLOR="success" STATUS="success"
    - ./run.sh -s docker-compose-$SERVER.yml -c docker-compose-$CLIENT.yml || export COLOR="critical" STATUS="failed"
    - mkdir -p badges
    - curl -o badges/${SERVER}-${CLIENT}-deployed.svg https://img.shields.io/badge/${SERVER}_${CLIENT}-${STATUS}_${CI_COMMIT_SHORT_SHA}-${COLOR}.svg
  image: docker:stable
  services:
    - docker:dind
  artifacts:
    name: pages
    paths:
      - docker-compose/badges/


### Bazel client

test_buildbarn_bazel:
  <<: *test
  variables:
    SERVER: buildbarn
    CLIENT: bazel

test_buildfarm_bazel:
  <<: *test
  variables:
    SERVER: buildfarm
    CLIENT: bazel

test_buildgrid_bazel:
  <<: *test
  variables:
    SERVER: buildgrid
    CLIENT: bazel

### Goma client

test_buildbarn_goma:
  <<: *test
  variables:
    SERVER: buildbarn
    CLIENT: goma

test_buildfarm_goma:
  <<: *test
  variables:
    SERVER: buildfarm
    CLIENT: goma

test_buildgrid_goma:
  <<: *test
  variables:
    SERVER: buildgrid
    CLIENT: goma

### Recc client

test_buildbarn_recc:
  <<: *test
  variables:
    SERVER: buildbarn
    CLIENT: recc

test_buildfarm_recc:
  <<: *test
  variables:
    SERVER: buildfarm
    CLIENT: recc

test_buildgrid_recc:
  <<: *test
  variables:
    SERVER: buildgrid
    CLIENT: recc

pages:
  stage: deploy
  script:
    - mkdir public
    - cp docker-compose/badges/* public/
  artifacts:
    name: pages
    paths:
    - public/
    - docker-compose/badges/
  rules:
    - if: $CI_COMMIT_BRANCH == 'reapi-revamp'
